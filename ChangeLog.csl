2006-07-16  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* configure: Rebuild to correct problem in previous patch.

2006-07-15  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* configure.ac: Accept --with-versuffix and --with-bugurl.
	* configure: Regenerate.
	* Makefile.in: (VERSUFFIX_s, BUGURL_s): New.
	(GDB_FLAGS): Add -DVERSUFFIX and -DBUGURL.
	* top.c (print_gdb_version): Print VERSUFFIX and BUGURL.

2006-07-04  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* remote.c (struct remote_state): Add explicit_packet_size.
	(remote_arch_state): Remove explicit_packet_size.
	(get_remote_packet_size): Check explicit_packet_size.
	(get_memory_packet_size): Likewise.
	(remote_query_packet_info): Update.
	(remote_open_1): Reset explicit_packet_size.

	Backport:
	2006-07-04  Daniel Jacobowitz  <dan@codesourcery.com>
	* remote.c (init_remote_state): Use xrealloc instead of xmalloc.

	2006-06-08  Daniel Jacobowitz  <dan@codesourcery.com>
	* (struct remote_state): New type, only containing
	buf and buf_size.
	(remote_state): New variable.
	(get_remote_state): New function.
	(struct remote_arch_state): Renamed from struct remote_state.
	Removed buf and buf_size.
	(get_remote_arch_state): Renamed from get_remote_state.  All
	necessary callers updated to call this function.
	(init_remote_state): Initialize the architecture-specific state.
	Update the target-specific state if necessary.
	(get_remote_packet_size): New function.  All previous references
	changed to use this accessor function.
	(packet_reg_from_regnum, packet_reg_from_pnum): Take a
	remote_arch_state instead of a remote_state.  All callers changed.
	(_initialize_remote): Initialize the packet buffer here.

2006-07-03  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* remote.c (remote_query_packet_info): Update for backported patch.
	(fetch_registers_using_g, store_registers_using_G)
	(remote_read_qpart): Likewise.

	Backport:
	2006-03-30  Daniel Jacobowitz  <dan@codesourcery.com>
	* remote.c (struct remote_state): Add BUF and BUF_SIZE.
	(init_remote_state): Initialize the new fields.
	(get_memory_packet_size): Update BUF and BUF_SIZE if necessary.
	(set_thread, remote_thread_alive, remote_unpack_thread_info_response)
	(remote_get_threadinfo, parse_threadlist_response)
	(remote_get_threadlist, remote_current_thread, remote_threads_info)
	(remote_threads_extra_info, extended_remote_restart, get_offsets)
	(remote_check_symbols, remote_open_1, remote_detach)
	(remove_vcont_probe, remote_vcont_resume, remote_resume)
	(remote_wait, remote_async_wait, fetch_register_using_p)
	(remote_fetch_registers, store_register_using_P)
	(remote_store_registers, check_binary_download, remote_write_bytes)
	(remote_read_bytes, remote_insert_breakpoint)
	(remote_remove_breakpoint, remote_insert_watchpoint)
	(remote_remove_watchpoint, remote_insert_hw_breakpoint)
	(remote_remove_hw_breakpoint, compare_sections_command)
	(remote_xfer_partial, remote_rcmd, packet_command)
	(remote_get_thread_local_address): Use the global incoming buffer
	instead of alloca or xmalloc.  Limit outgoing packets to
	rs->remote_packet_size and incoming packets to rs->buf_size.
	Update calls to getpkt and remote_send.
	(remote_send): Take arguments by reference.
	(putpkt_binary): Eliminate junkbuf.  Use skip_frame.
	(skip_frame): New function.
	(read_frame): Take arguments by reference.  Expand the packet
	buffer instead of issuing an error.
	(getpkt, getpkt_sane): Take arguments by reference.
	* remote.h (getpkt): Update prototype and doc.
	* tracepoint.c (remote_get_noisy_reply): Take arguments by
	reference.
	(target_buf): Change from array to pointer.
	(target_buf_size): New variable.
	(remote_set_transparent_ranges): Update call to getpkt.
	(trace_start_command, trace_stop_command, trace_status_command):
	Update calls to remote_get_noisy_reply.
	(finish_tfind_command): Take arguments by reference.
	(trace_find_command, trace_find_pc_command)
	(trace_find_tracepoint_command, trace_find_line_command):
	(trace_find_range_command, trace_find_outside_command): Update
	calls to finish_tfind_command.
	(_initialize_tracepoint): Initialize target_buf_size and target_buf.

2006-06-23  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_load_cmd): Fix variable name typo
	* config/unknown.exp: Check gdb_board_support before claiming it
	is not supported.

2006-06-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/:
	* gdb.base/store.exp: Don't use gdb_suppress_entire_file.
	* gdb.base/gdb1555.exp: Use gdb_compile_shlib.  Skip if not
	native.
	* gdb.stabs/exclfwd.exp: Skip the test if configure did not
	enable stabs testing.
	* gdb.base/auxv.exp: Intercept undefined command messages before
	gdb_test_multiple does.

2006-06-19  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/recurse.exp: Revert my 2006-06-09 patch.  Rely on test
	harness to set number of hardware watchpoints.

2006-06-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.def (fixincludes): Correct extra_configure_flags
	typo.
	(expat): Don't install.  Don't build shared libraries.
	* Makefile.in: Regenerated.

2006-06-13  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_load_cmd): New.

2006-06-12  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_frame_align): Say which archs need alignment.

	gdb/testsuite/
	* gdb.base/charset.exp: Use ${srcfile}.

2006-06-10  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #669
	gdb/
	* remote-fileio.c (remote_fileio_func_read): Limit console
	reads to 8K.

2006-06-09  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/auxv.exp: Skip if bare_board
	* gdb.base/gdb1555.exp: Likewise.
	* gdb.base/start.exp: Skip if use_gdb_stub.

	gdb/testsuite/
	* gdb.base/recurse.exp: Add gdb,hardware_watchpoint target
	info.  Adjust testing to cope with a single watchpoint.
	* gdb.base/watchpoint.exp: Adjust expected string.

	gdb/testsuite/
	* gdb.base/cursal.exp: Run to main before setting listing
	size.
	* gdb.base/dbx.exp: Run to main before testing.
	* gdb.base/ending-run.exp: Add additional expected string.
	* gdb.base/huge.c: Allow CRASH_GDB to be set from command
	line.
	* gdb.base/huge.exp: Loop over compilation to find a size that
	is acceptable.
	* gdb.base/remote.exp: Correct expected strings.
	* gdb.dwarf2/mac-fileno.S: Avoid # comments.

	gdb/
	* remote-file.io.c (remote_fileio_func_system): Treat zero length
	string as NULL.  Adjust for NULL pointer argument.
	* doc/gdb.texinfo (system): Document behaviour with zero length
	string.

	gdb/testsuite/
	* gdb.base/fileio.c: Add system(NULL) test.
	* gdb.base/fileio.exp: Check it.

	gdb/testsuite/
	* gdb.cp/anon-union.cc: Add code at end of function.
	* gdb.cp/anon-union.exp: Adjust end of function breakpoint.
	* gdb.mi/var-cmd.c: Add code at end of function.
	* gdb.mi/mi-var-display.exp: Adjust end of next.
	* gdb.mi/mi2-var-display.exp: Likewise.

	gdb/testsuite/
	* gdb.base/break.c: Add breakpoint 10a marker.
	* gdb.base/break.exp: Check breakpoint on }

	gdb/
	* m68k-tdep.c (m68k_frame_align): New.
	(m68k_push_dummy_call): Don't align here.
	(m68k_gdbarch_init): Set frame_align here.

2006-06-08  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/remote.c (remote_open_1): Do preopen tasks before
	irreversably destroying state.

	* gdb/m68k-tdep.c (m68k_svr4_extract_return_value): Use
	tdep->ptr_value_regnum for pointer returns.
	(m68k_svr4_store_return_value): Likewise.
	(m68k_reg_struct_return_r): New, broken out of ...
	(m68k_reg_struct_return_p): ... here.  Implement gcc's structure
	mode algorithm.
	(m68k_svr4_init_abi, m68k_aout_init_abi): Set ptr_value_regnum.
	(m68k_gdbarch_init): Likewise.
	* gdb/m68k-tdep.h (struct gdbarch_tdep): Add ptr_value_regnum
	field.

2006-06-05  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/remote.c (remote_insert_watchpoint): Return -1, rather than
	fatal error if packet is disabled.
	(remote_remove_watchpoint, remote_insert_hw_breakpoint,
	remote_remove_hw_breakpoint): Likewise.
	Revert my 2006-06-01  Nathan Sidwell  <nathan@codesourcery.com>
	change to breakpoint.c

	* gdb/testsuite/gdb.asm/m68k.inc (gdbasm_call): Use jsr.
	* gdb/testsuite/gdb.base/fileio.c (stop): New.  Call it everywhere
	the debugger should stop.
	* gdb/testsuite/gdb.base/fileio.exp: Add breakpoint to stop
	routine and adjust.
	* gdb/testsuite/gdb.base/charset.exp: Specify source file for
	breakpoint address.

	* gdb/m68k-tdep.c (M68K_FPREG_SIZE): Remove.
	(REGISTER_BYTES_FP): Use tdep->fpreg_type.
	(m68k_register_bytes_ok): adjust.
	(m68k_register_type): Use tdep->fpreg_type.
	(m68k_register_to_value, m68k_value_to_register): Likewise.
	(m68k_svr4_extract_return_value): Use tdep->float_return &
	tdep->fpreg_type.
	(m68k_svr4_store_return_value): Likewise.
	(m68k_gdbarch_init): Set tdep->float_return & tdep->fpreg_type.
	* gdb/m68k-tdep.h (struct gdbarch_tdep): Add floar_return &
	fpreg_type fields.
	* gdb/m68kbsd-tdep.c (m68kbsd_fpreg_offset): Use tdep->fpreg_type.

	* gdb/m68k-tdep.c (m68k_dwarf_reg_to_regnum): New.
	(m68k_gdbarch_init): Set it for dwarf & dwarf2 reg number
	conversion. Use M68K_NUM_REGS for number of regs.

	* gdb/configure.tgt (gdb_osabi): uclinux is like linux.
	* gdb/m68k-tdep.c (m68k_svr4_extract_return_value): Return value
	is never in %a0.
	(m68k_reg_struct_return_p): Duplicate gcc's struct mode algorithm.
	(m68k_svr4_return_value) Use VALUE_STRUCT_CONVENTION.  do not rely
	on %a0.
	(m68k_push_dummy_call): Force stack alignment.
	(m68k_svr4_init_abi): Set struct_return convention.
	(m68k_aout_init_abi): New.
	(m68k_gdbarch_init): Default to bare elf ABI that gcc provides.
	* gdb/m68k-tdep.h (m68k_aout_init_abi): Declare.
	* gdb/m68kbsd-tdep.c (m68kbsd_aout_init_abi): Use m68k_aout_init_abi.
	(m68kbsd_elf_init_abi): Add comment.
	* gdb/m68klinux-tdep.c (m68k_linux_init_abi): Just set the struct
	pointer register here.

2006-06-01  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/breakpoint.c (insert_bp_location): Remember the failing
	watchpoint address and pass to remove_breakpoint.
	(remove_breakpoints, remove_hw_watchpoints, reattach_breakpoints,
	detach_breakpoints): Adjust remove_breakpoint call.
	(remove_breakpoint): Add VAL_FAILED parameter.  Stop removing
	watchpoint addresses when it is reached.
	(delete_breakpoint): Adjust remove_breakpoint call.

2006-05-24  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/remote-fileio.c (remote_fileio_reset): New.
	* gdb/remote-fileio.h (remote_fileio_reset): Prototype.
	* gdb/remote.c (extended_remote_restart, remote_open_1): Call it.

2006-05-22  Richard Sandiford  <richard@codesourcery.com>

	opcodes/
	* m68k-dis.c (m68k_scan_mask): Add missing return.

2006-05-08  Richard Sandiford  <richard@codesourcery.com>

	include/opcodes/
	* m68k.h (mcf_mask): Define.

	opcodes/
	* m68k-opc.c (m68k_opcodes): Fix the masks of the Coldfire fmovemd
	and fmovem entries.  Put register list entries before immediate
	mask entries.  Use "l" rather than "L" in the fmovem entries.
	* m68k-dis.c (match_insn_m68k): Remove the PRIV argument and work it
	out from INFO.
	(m68k_scan_mask): New function, split out from...
	(print_insn_m68k): ...here.  If no architecture has been set,
	first try printing an m680x0 instruction, then try a Coldfire one.

2006-05-03  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/testsuite/gdb.cp/gdb1355.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.cp/gdb1355.cc: Ensure all types are referenced.
	* gdb/testsuite/gdb.cp/hang2.C: Ditto.
	* gdb/testsuite/gdb.cp/m-data.cc: Ditto.
	* gdb/testsuite/gdb.cp/hang3.C: Ditto.
	* gdb/testsuite/gdb.cp/hang1.C: Ditto.

	* gdb/gdbtypes.c (rank_one_type): Check for plain char -> signed/
	unsigned char.

	* gdb/testsuite/gdb.base/completion.exp: Accept "long" as a type.

	* gdb/testsuite/gdb.base/volatile.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.base/constvars.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.stabs/weird.exp: Return -1 instead of issuing
	error.

	* gdb/testsuite/gdb.base/advance.c: Add proper function prototype.

	* gdb/testsuite/gdb.base/ending-run.exp: Add case for ARM runtime.

	* gdb/testsuite/gdb.base/gdb1821.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.base/ptype.exp: Accept different spellings of
	integer types.

	* gdb/testsuite/gdb.cp/inherit.exp: Cope with armcc vtable pointers.

	* gdb/testsuite/gdb.mi/mi2-var-child.exp: Accept different spellings
	of integer types.
	* gdb/testsuite/gdb.mi/mi-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-cmd.exp: Ditto.

2006-05-03  Paul Brook  <paul@codesourcery.com>

	* arm-linux-tdep.c (arm_linux_extract_return_value): Use gdb_byte.

2006-05-03  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/c-valprint.c: Handle class member typedefs.

	* gdb/symtab.c (skip_prologue_using_sal): Treat two consecutive lines
	at the same address as a prolouge marker.
	* gdb/arm-tdep.c (arm_skip_prologue): Use skip_prologue_using_sal.

	* gdb/dwarf2expr.c (execute_stack_op): Check for bogus DW_OP_reg.

	* gdb/dwarf2read.c (read_structure_type): Use tag name for C++/Java
	classes.

	* Makefile.in (eval.o): Update dependencies.
	* eval.c: Include "ui-out.h" and "exceptions.h".
	(evaluate_subexp_standard): Use TRY_CATCH around value_of_variable.
	Use value_zero if an error occurs when avoiding side effects.
	* varobj.c (varobj_create): Call release_value after evaluate_type.
	(c_value_of_root): Initialize new_val.  Don't release_value a NULL
	value.

	* gdb/c-typeprint.c (cp_type_print_method_args): Don't print type
	details.

	* gdb/dwarf2read.c (dwarf2_debug_line_missing_file_complaint): New
	function.
	(dwarf_decode_lines): Check for line info without a file.

2006-05-03  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/dwarf2read.c (read_subroutine_type): Add armcc workaround.

	* gdb/dwarf2read.c (read_structure_type): Look for ADS vtable
	pointers.

	* gdb/dwarf2read.c (dwarf_decode_lines): Don't set dir for absolute
	paths.
	(dwarf_decode_lines): Ditto.
	(dwarf2_start_subfile): Split absolute filenames into path+file.

	* gdb/symtab.h (struct symbol): Add is_argument.
	(SYMBOL_IS_ARGUMENT): Define.
	* gdb/stack.c (print_frame_args): Use SYMBOL_IS_ARGUMENT.
	(print_frame_arg_vars): Ditto.
	* gdb/dwarf2read.c (new_symbol): Set SYMBOL_IS_ARGUMENT.
	(new_symbol): Mark optimized out arguments.

	* gdb/dwarf2read.c (partial_read_comp_unit_head): Accept version 3.

	* gdb/dwarf2read.c (read_unspecified_type): New function.
	(read_type_die): Handle DW_TAG_unspecified_type.

2006-05-03  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/dwarf2read.c (field_info): Add baseclasses.
	(dwarf2_add_field): Check base classes.
	(dwarf2_attach_fields_to_type): Ditto.
	
	* gdb/gnu-v3-abi.c (gnuv3_rtti_type): Check for NULL base_type.
	(gnuv3_virtual_fn_field): Handle missing base.
	(gnuv3_baseclass_offset): Handle missing vptr.
	* gdb/varobj.c (cplus_class_num_children): Call fill_in_vptr_fieldno.
	(cplus_name_of_child): Ditto.
	* gdb/eval.c (evaluate_subexp_standard): Ditto.
	* gdb/dwarf2read.c (read_structure_type): Search for vtable pointer
	by name in objects built by ARM compiler.
	
	* gdb/dwarf2read.c (dwarf2_add_member_fn): Calculate virtual function
	offset for classes without DW_AT_containing_type.

2006-04-28  Mark Mitchell  <mark@codesourcery.com>

	* gdb/mt-tdep.c (mt_register_name): Correct out-of-range logic to
	include additional registers. 

2006-04-28  Richard Sandiford  <richard@codesourcery.com>

	* gdb/gdbserver/configure.srv (m68k*-*-linux*): Use reg-cf.o.

2006-04-19  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/doc/gdb.texinfo (Remote configuration): Mention "set remote
	load-offsets".
	(General Query Packets): Document qPartInfo.

2006-04-18  Mark Mitchell  <mark@codesourcery.com>

	Issue #655
	* gdb/mt-tdep.c (mt_gdb_regnums): Add ZI2, ZQ2, Ichannel2,
	Iscramb2, Qscramb2, Qchannel2.
	(mt_register_name): Likewise.
	(mt_copro_register_type): Describe ZI2 and ZQ2.
	
2006-04-11  Mark Mitchell  <mark@codesourcery.com>

	Issue #658
	* gdb/mt-tdep.c (mt_gdb_regnums): Define
	MT_COPRO_PSEUDOREG_MAC_REGNUM.
	(mt_register_name): Use it.
	(mt_copro_register_type): Likewise.
	(mt_register_type): Likewise.
	(mt_pseudo_register_read): Likewise.  Read the MAC register, not
	the coprocessor register.
	(mt_pseudo_register_write): Likewise.

2006-04-11  Daniel Jacobowitz  <dan@codesourcery.com>

	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Accept more
	mapping symbols.

2006-04-11  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport:
	2006-03-09  Paul Brook  <paul@codesourcery.com>
	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Recognise additional
	mapping symbols.

2006-04-02  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.def (host_modules, dependencies): Add expat.
	* configure.in (host_libs): Add expat.
	* Makefile.in, configure: Regenerate.
	* expat: New directory.

	* gdb/Makefile.in: Add expat, new files, and xml-builtin.c.  Update
	dependencies.
	* gdb/acinclude.m4: Include stdint.m4.
	* gdb/configure.ac: Use AC_C_BIGENDIAN and GCC_HEADER_STDINT.
	* gdb/aclocal.m4, gdb/config.in, gdb/configure: Regenerate.

	* gdb/auxv.h: Remove target_auxv_read prototype.
	* gdb/auxv.c, gdb/avr-tdep.c, gdb/ia64-tdep.c, gdb/linux-nat.c,
	gdb/procfs.c: Use target_read_whole.
	* gdb/sparc-tdep.c: Use target_read.

	* gdb/frame.c: Work around null frame_id handling.

	* gdb/breakpoint.c, gdb/f-valprint.c, gdb/infcmd.c, gdb/inflow.c,
	gdb/infrun.c, gdb/stack.c, gdb/valops.c, gdb/varobj.c,
	gdb/cli-cmds.c, gdb/testsuite/gdb.base/default.exp,
	gdb/tui/tui-disasm.c, gdb/tui/tui-source.c,
	gdb/tui/tui-winsource.c: Selected frame fixups.

	* gdb/README.AVAIL, gdb/available.c, gdb/available.h,
	gdb/parse-avail.c, gdb/sha1.c, gdb/features/feature_to_c.sh,
	gdb/features/gdb-target.dtd: New files.
	* gdb/arm-tdep.c: Handle missing FPA, present VFP, and
	self-described registers.  Decode VFP register numbers from DWARF.
	* gdb/arm-tdep.h: Add flags for VFP and FPA.
	* gdb/gdbarch.sh: Add available_features_support and feature_set.
	Export the arch's obstack.  Check feature sets.  Improve error
	handling.
	* gdb/gdbarch.c, gdb/gdbarch.h: Regenerated.
	* gdb/infcmd.c: Trigger architecture selection.
	* gdb/remote.c: Available feature support.  qPacketInfo support.
	Improved g/G packet support.  Improved qPart support.
	qPart:features support.
	* gdb/symfile.c: Adjust download_write_size.
	* gdb/target.c: Revise partial transfer support.  Handle available
	features method.  Add target_read_whole.
	* gdb/target.h: Add the available features object and methods.
	* gdb/doc/gdb.texinfo: Document new features.

	* gdb/symfile.h: Include symtab.h.

2006-03-31  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/config/m68k/monitor.mt (TDEPFILES): Remove unneeded
	monitors.
	(DEPRECATED_TM_FILE): Remove.

	* gdb/m68k-tdep.c (M68K_FPREG_SIZE): Define.
	(REGISTER_BYTES_FP): Use it.

	* gdb/configure.tgt (m68k-*-uclinux*): target is linux.

	* gdb/remote.c (remote_fetch_registers): Revert bogus change.

	* gdb/remote.c (remote_fetch_registers): Don't warn about short
	register packet if we've not set the expected value.

	* gdb/gdbserver/linux-low.c (linux_read_offsets): Remove debugging
	printf.

	* gdb/gdbserver/Makefile.in (reg-cf.o, reg-cf.c): New targets.
	* gdb/gdbserver/configure.srv (m68k*-*-uclinux*): New target.
	* gdb/gdbserver/linux-low.c (linux_create_inferior): Use vfork on
	mmuless systems.
	(linux_resume_one_process): Remove extraneous cast.
	(linux_read_offsets): New.
	(linux_target_op): Add linux_read_offsets on mmuless systems.
	* gdb/gdbserver/server.c (handle_query): Add qOffsets logic.
	* gdb/gdbserver/target.h (struct target_ops): Add read_offsets.

2006-03-30  Mark Mitchell <mark@codesourcery.com>

	* libiberty/configure.ac: Add cygpath for mingw hosts.
	* libiberty/configure: Rebuilt.
	* libiberty/Makefile.in: Add cygpath.
	* libiberty/cygpath.c: New.

2006-03-30  Paul Brook  <paul@codesourcery.com>

	Backport form mainline.
	* gdb/testsuite/gdb.mi/mi-until.exp: kfail broken until command.
	* gdb/testsuite/gdb.mi/mi2-until.exp: Ditto.

2006-03-29  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/m68k-tdep.c (M68K_FPREG_TYPE, M68K_LONG_DOUBLE_FORMAT,
	M68K_RETURN_FP0): New.  Set for Coldfire.
	(m68k_register_type, m68k_register_to_value,
	m68k_svr4_extract_return_value, m68k_svr4_store_return_value,
	m68k_gdbarch_init): Use them.

2006-03-21  Mark Mitchell  <mark@codesourcery.com>

	* gdb/ser-mingw.c (net_windows_state): Add mutex.
	(net_windows_select_thread): Grab lock around access to
	read_event.
	(net_windows_wait_handle): Do not reset the read_event.
	(net_windows_open): Create a mutex.
	(net_windows_read_prim): New function.
	(_initialize_ser_windows): Use it.

2006-03-20  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-common.c (pex_run): Close the write end of the
	pipe after starting the child.

	* gdb/config/arm/armv7m.mt (TDEPFILES): Add prologue-value.o.

2006-03-21  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz <dan@codesourcery.com>
	Jim Blandy <jimb@codesourcery.com>

	* gdb/Makefile.in: Add prologue_value.{c,h}
	* gdb/arm-tdep.c: Include prologue-value.h.
	(thumb_skip_prologue): Remove.
	(thumb_analyze_prologue): New function.
	(arm_skip_prologue): Use thumb_analyze_prologue.
	(thumb_scan_prologue): Ditto.
	* gdb/prologue-value.c: New file.
	* gdb/prologue-value.h: New file.
	* gdb/config/arm/embed.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/linux.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/nbsd.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/wince.mt (TDEPFILES): Add prologue-value.o.
	* gdb/testsuite/gdb.arch/thumb-prologue.c: New file.
	* gdb/testsuite/gdb.arch/thumb-prologue.exp: New file.

2006-03-20  Mark Mitchell  <mark@codesourcery.com>

	* configure.tgt (arm*-stellaris-*): Use armv7m configuration.
	* config/arm/armv7m.mt: New file.
	* config/arm/tm-armv7m.h: Likewise.
	* arm-tdep.c (arm_register_name_strings): Use xPSR on ARM V7M.
	(arm_pc_is_thumb): ARM V7M is always Thumb.
	(set_disassembly_style): Use xPSR on ARM V7M.
	(arm_write_pc): Do not set T bit in CSPR on V7M.

2006-03-20  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-win32.c (<errno.h>): Include.
	(fix_argv): Remove.
	(argv_to_cmdline): New function.
	(std_suffixes): New variable.
	(no_suffixes): Likewise.
	(find_executable): New function.
	(win32_spawn): Likewise.
	(spawn_script): Use win32_spawn instead of _spawnv[p].
	(pex_win32_exec_child): Replace MSVCRT calls with Win32 API calls.
	(pex_win32_wait): Likewise.

2006-03-19  Mark Mitchell  <mark@codesourcery.com>

	* gdb/ser-mingw.c (free_pipe_state): Close pipe before calling
	pex_free. 

2006-03-17  Mark Mitchell  <mark@codesourcery.com>

	* gdb/config/arm/embed.mt (TDEPFILES): Remove remote-rdp.o.

2006-03-17  Jim Blandy  <jimb@codesourcery.com>

	Add support for 'target remote |' on MinGW.
	* gdb/ser-mingw.c (struct pipe_state): New structure.
	(make_pipe_state, free_pipe_state, cleanup_pipe_state)
	(pipe_windows_open, pipe_windows_close, pipe_windows_read)
	(pipe_windows_write, pipe_wait_handle): New functions.
	(_initialize_ser_windows): Register a "pipe" interface based on
	them.

 	* libiberty/pex-common.c (pex_write_input): New function.
 	* libiberty/pexecute.txh (pex_write_input): Document it.
 	* libiberty/pex-common.h (struct pex_funcs): New function ptr fdopenw.
 	* libiberty/pex-unix.c (pex_unix_fdopenw): New function.
 	(funcs): List it as our fdopenw function.
 	* libiberty/pex-win32.c (pex_win32_fdopenw): New function.
 	(funcs): List it as our fdopenw function.
 	* libiberty/pex-djgpp.c (funcs): Leave fdopenw null.
 	* libiberty/pex-msdos (funcs): Same.
 	* libiberty/functions.texi: Regenerated.

 	* include/libiberty.h (pex_write_input): New declaration.

	* libiberty/pex-common.h (struct pex_obj): Doc fixes.

	* libibery/functions.texi: Regenerate.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/gdb_proc_service.h (paddr_t): Use psaddr_t if available.
	* gdb/proc-service.c (ps_xfer_memory): Cast paddr_t to unsigned
	long.
	(ps_pglobal_lookup): Cast CORE_ADDR to paddr_t.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/gdbserver/linux-mips-low.c: Include <sys/ptrace.h> and
	"gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
	* gdb/gdbserver/Makefile.in (linux-i386-low.o, linux-mips-low.o)
	(linux-x86-64-low.o): Update.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/gdbserver/configure.ac: Remove checks for prfpregset_t.
	* gdb/gdbserver/gdb_proc_service.h: New file.
	* gdb/gdbserver/linux-i386-low.c, gdb/gdbserver/linux-x86-64-low.c,
	gdb/gdbserver/thread-db.c: Use the new "gdb_proc_service.h".
	* gdb/gdbserver/proc-service.c: Likewise.
	(ps_pglobal_lookup, ps_pdread, ps_pdwrite): Use psaddr_t.
	(ps_lgetfpregs, ps_lsetfpregs): Use a void* argument.
	* gdb/gdbserver/Makefile.in (gdb_proc_service_h): Updated.
	* gdb/gdbserver/configure, config.in: Regenerated.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/Makefile.in (mips_linux_tdep_h): New.
	(mpis-linux-nat.o, mips-linux-tdep.o): Update.
	* gdb/mips-linux-nat.c: Include "inferior.h", "mips-linux-tdep.h", and
	<sys/ptrace.h>.
	(have_ptrace_regsets, super_fetch_registers, super_store_registers)
	(mips64_linux_regsets_fetch_registers)
	(mips64_linux_regsets_store_registers, mips64_linux_fetch_registers)
	(mips64_linux_store_registers): New.
	(_initialize_mips_linux_nat): Override to_fetch_registers and
	to_store_registers.
	* gdb/mips-linux-tdep.h: New file.
	* gdb/mips-linux-tdep.c: Include "mips-linux-tdep.c".
	(ELF_NGREG, ELF_NFPREG, elf_greg_t, elf_gregset_t, elf_fpreg_t)
	(elf_fpregset_t, FPR_BASE, PC, CAUSE, BADVADDR, MMHI, MMLO)
	(FPC_CSR, FPC_EIR, EF_REG0, EF_REG31, EF_LO, EF_HI, EF_CP0_EPC)
	(EF_CP0_BADVADDR, EF_CP0_STATUS, EF_CP0_CAUSE, EF_SIZE)
	(MIPS64_ELF_NGREG, MIPS64_ELF_NFPREG, mips64_elf_greg_t)
	(mips64_elf_gregset_t, mips64_elf_fpreg_t, mips64_elf_fpregset_t)
	(MIPS64_FPR_BASE, MIPS64_PC, MIPS64_CAUSE, MIPS64_BADVADDR)
	(MIPS64_MMHI, MIPS64_MMLO, MIPS64_FPC_CSR, MIPS64_FPC_EIR)
	(MIPS64_EF_REG0, MIPS64_EF_REG31, MIPS64_EF_LO, MIPS64_EF_HI)
	(MIPS64_EF_CP0_EPC, MIPS64_EF_CP0_BADVADDR, MIPS64_EF_CP0_STATUS)
	(MIPS64_EF_CP0_CAUSE, MIPS64_EF_SIZE): Delete.
	(supply_32bit_reg): Use gdb_byte.
	(supply_64bit_reg): New.
	(mips_supply_gregset, mips_fill_gregset, mips_supply_fpregset)
	(mips_fill_fpregset, fetch_core_registers, supply_gregset)
	(fill_gregset, supply_fpregset): Update for renamed types.
	(mips64_supply_gregset): Use gdb_byte and supply_64bit_reg.
	(mips64_fill_gregset): Make global.  Handle 32-bit register
	sizes.
	(mips64_fill_fpregset): Make global.  Use gdb_byte.  Handle
	FP regsets properly.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-linux-tdep.c (mips_supply_gregset): Renamed from supply_gregset.
	(mips_fill_gregset): Renamed from fill_gregset.
	(mips_supply_fpregset): Renamed from supply_fpregset.
	(mips_fill_fpregset): Renamed from fill_fpregset.
	(fetch_core_registers): Update calls.
	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset): New
	functions.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-tdep.c (mips_gdbarch_init): Default 64-bit ELF files to N64.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-tdep.c (is_mips16_addr, mips32_next_pc, add_offset_16):
	Correct arithmetic for 64-bit CORE_ADDR.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-linux-tdep.c: Include "floatformat.h".
	(mips_linux_init_abi): Use 128-bit long double for N32 and N64.
	(mips_n32n64_return_value): Support 128-bit long double.
	(print_gp_register_row): Don't print spaces before ignored
	or floating point registers.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-mdebug-tdep.c (compare_pdr_entries): Use bfd_get_signed_32
	for code addresses.
	(non_heuristic_proc_desc): Likewise.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New.
	* gdb/Makefile.in (mips-linux-nat.o): Update.

2006-03-08  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gdb/arm-tdep.c (arm_push_dummy_call): Remove stack alignment.
	(arm_frame_align): New function.
	(arm_gdbarch_init): Use it.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gdb/testsuite/gdb.base/assign.exp: Correct fail message.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* sim/arm/elfos.c (ARMul_OSHandleSWI): Call correct function for IsTTY.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gdb/testsuite/lib/compiler.c: Extract armcc version number.
	* gdb/testsuite/lib/compiler.cc: Ditto.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	2006-03-03  Khem Raj <khem@mvista.com>
	* remote-rdp.c (remote_rdp_xfer_inferior_memory): Use gdb_byte.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gdb.arch/altivec-abi.exp: Use nowarnings instead of
	additional_flags=-w.
	* gdb.arch/altivec-regs.exp: Ditto.
	* gdb.arch/e500-abi.exp: Ditto.
	* gdb.arch/e500-regs.exp: Ditto.
	* gdb.base/all-bin.exp: Ditto.
	* gdb.base/annota1.exp: Ditto.
	* gdb.base/annota3.exp: Ditto.
	* gdb.base/args.exp: Ditto.
	* gdb.base/arithmet.exp: Ditto.
	* gdb.base/assign.exp: Ditto.
	* gdb.base/async.exp: Ditto.
	* gdb.base/bang.exp: Ditto.
	* gdb.base/break.exp: Ditto.
	* gdb.base/call-rt-st.exp: Ditto.
	* gdb.base/completion.exp: Ditto.
	* gdb.base/cond-expr.exp: Ditto.
	* gdb.base/condbreak.exp: Ditto.
	* gdb.base/consecutive.exp: Ditto.
	* gdb.base/define.exp: Ditto.
	* gdb.base/display.exp: Ditto.
	* gdb.base/ena-dis-br.exp: Ditto.
	* gdb.base/environ.exp: Ditto.
	* gdb.base/eval-skip.exp: Ditto.
	* gdb.base/info-proc.exp: Ditto.
	* gdb.base/jump.exp: Ditto.
	* gdb.base/logical.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/miscexprs.exp: Ditto.
	* gdb.base/pc-fp.exp: Ditto.
	* gdb.base/pointers.exp: Ditto.
	* gdb.base/relational.exp: Ditto.
	* gdb.base/reread.exp: Ditto.
	* gdb.base/sect-cmd.exp: Ditto.
	* gdb.base/sep.exp: Ditto.
	* gdb.base/sepdebug.exp: Ditto.
	* gdb.base/until.exp: Ditto.
	* gdb.base/whatis-exp.exp: Ditto.
	* gdb.cp/annota2.exp: Ditto.
	* gdb.cp/annota3.exp: Ditto.
	* gdb.trace/actions.exp: Ditto.
	* gdb.trace/backtrace.exp: Ditto.
	* gdb.trace/circ.exp: Ditto.
	* gdb.trace/collection.exp: Ditto.
	* gdb.trace/deltrace.exp: Ditto.
	* gdb.trace/infotrace.exp: Ditto.
	* gdb.trace/limits.exp: Ditto.
	* gdb.trace/packetlen.exp: Ditto.
	* gdb.trace/passc-dyn.exp: Ditto.
	* gdb.trace/passcount.exp: Ditto.
	* gdb.trace/report.exp: Ditto.
	* gdb.trace/save-trace.exp: Ditto.
	* gdb.trace/tfind.exp: Ditto.
	* gdb.trace/tracecmd.exp: Ditto.
	* gdb.trace/while-dyn.exp: Ditto.
	* gdb.trace/while-stepping.exp: Ditto.
	* lib/gdb.exp: Ditto.
	(gdb_compile): Handle nowarning option.

